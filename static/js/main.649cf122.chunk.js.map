{"version":3,"sources":["components/Section.js","components/social-profile/UserProfile.js","components/statistics/Statistics.js","components/friend-list/FriendListItem.js","components/friend-list/FriendList.js","components/transaction-history/TransactionData.js","components/transaction-history/TransactionHistory.js","App.js","index.js"],"names":["Section","title","children","class","UserProfile","props","name","tag","location","avatar","stats","src","alt","width","followers","views","likes","randomColor","Math","floor","random","Statistics","statTitle","items","map","item","style","backgroundColor","label","percentage","id","FriendListItem","isOnline","FriendList","userFriends","userFriend","Transactions","type","amount","currency","TransactionHistory","userTransactions","userTransaction","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.649cf122.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section class=\"task\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst UserProfile = (props) => {\r\n  const defaultAvatar = 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg';\r\n  const { name, tag, location, avatar = defaultAvatar, stats, } = props;\r\n    return (<div class=\"profile\">\r\n    <div class=\"description\">\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        class=\"avatar\"\r\n        width=\"100\"\r\n      />\r\n      <p class=\"name\">{name}</p>\r\n      <p class=\"tag\">@{tag}</p>\r\n      <p class=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul class=\"stats\">\r\n      <li>\r\n        <span class=\"label\">Followers </span>\r\n        <span class=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span class=\"label\">Views </span>\r\n        <span class=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span class=\"label\">Likes </span>\r\n        <span class=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>);\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  })\r\n};\r\n\r\nexport default UserProfile;","import PropTypes from 'prop-types';\r\n\r\nfunction randomColor() { \r\n  return Math.floor(Math.random() * 255); \r\n};\r\n\r\nfunction Statistics({ statTitle, items }) {\r\n  return (\r\n    <section class=\"statistics\">\r\n      {statTitle && <h3 class=\"statistics-title\">{statTitle}</h3>}\r\n\r\n      <ul class=\"stat-list\">\r\n        {items.map(item => (\r\n          <li key={item.id} class=\"item\" style={{backgroundColor: `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`}}>\r\n            <span class=\"label\">{item.label}</span>\r\n            <span class=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  statTitle: PropTypes.string,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({\r\n  avatar,\r\n  name,\r\n  isOnline,\r\n}) => {\r\n  return (\r\n    <li class=\"item\"> \r\n      <span class=\"status\">{isOnline ? 'Online' : 'Offline'}</span>\r\n      <img class=\"avatar\" src={avatar} alt=\"Аватар пользователя\" width=\"48\" />\r\n      <p class=\"name\">{name}</p>\r\n      </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import Friends from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FriendList({ userFriends }) {\r\n  return (\r\n    <ul class=\"friend-list\">\r\n      {userFriends.map(userFriend => (\r\n          <Friends\r\n            key={userFriend.id}\r\n            avatar={userFriend.avatar}\r\n            name={userFriend.name}\r\n            isOnline={userFriend.isOnline}\r\n          />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  userFriends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\nconst Transactions = ({\r\n  type,\r\n  amount,\r\n  currency,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactions.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transactions;","import Transactions from './TransactionData';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({ userTransactions }) {\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {userTransactions.map(userTransaction => (\r\n          <Transactions\r\n            key={userTransaction.id}\r\n            type={userTransaction.type}\r\n            amount={userTransaction.amount}\r\n            currency={userTransaction.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  userTransactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;","import Section from './components/Section';\nimport UserProfile from './components/social-profile/UserProfile';\nimport Statistics from './components/statistics/Statistics'\nimport FriendList from './components/friend-list/FriendList';\nimport TransactionHistory from './components/transaction-history/TransactionHistory';\n\nimport user from './components/social-profile/user.json';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport friends from './components/friend-list/friends.json';\nimport transactions from './components/transaction-history/transactions.json';\n\nexport default function App() {\n  return (\n    <div class=\"container\">\n      <Section title=\"Задание 1 - Профиль социальной сети\">\n        <UserProfile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n\n      <Section title=\"Задание 2 - Секция статистики\">\n        <Statistics\n          statTitle=\"Upload stats\"\n          items={statisticalData}\n        />\n      </Section>\n      <Section title=\"Задание 3 - Список друзей\">\n        <FriendList\n          userFriends={friends}\n        />\n      </Section>\n      <Section title=\"Задание 4 - История транзакций\">\n        <TransactionHistory\n          userTransactions={transactions}\n        />\n      </Section>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}