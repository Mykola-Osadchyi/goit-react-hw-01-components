{"version":3,"sources":["components/UserProfile/UserProfile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.js","components/Section/Section.js","components/UserProfile/UserProfile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionData.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","task","UserProfile","props","name","tag","location","avatar","stats","profile","description","src","alt","width","item","label","quantity","followers","views","likes","randomColor","Math","floor","random","Statistics","statTitle","items","statistics","list","map","style","backgroundColor","percentage","id","FriendListItem","isOnline","status","FriendList","userFriends","userFriend","Transactions","type","amount","currency","TransactionHistory","userTransactions","userTransaction","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bccdd743.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__qZQME\",\"description\":\"UserProfile_description__tJx27\",\"avatar\":\"UserProfile_avatar__LO_Gz\",\"name\":\"UserProfile_name__3RgpT\",\"tag\":\"UserProfile_tag__ZxGkk\",\"location\":\"UserProfile_location__UWsEI\",\"stats\":\"UserProfile_stats__2h9OY\",\"item\":\"UserProfile_item__3SLW8\",\"label\":\"UserProfile_label__2fc85\",\"quantity\":\"UserProfile_quantity__19vKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__24FZw\",\"item\":\"FriendList_item__2zCQE\",\"status\":\"FriendList_status__2AuFq\",\"avatar\":\"FriendList_avatar__cOMz6\",\"name\":\"FriendList_name__3E71O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__F4lrt\",\"title\":\"Statistics_title__3Vodn\",\"list\":\"Statistics_list__3tzjv\",\"item\":\"Statistics_item__2ulf1\",\"label\":\"Statistics_label__2KLv4\",\"percentage\":\"Statistics_percentage__2a9fP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1-ftx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Section_task__yaqGS\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.task}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './UserProfile.module.css';\n\nconst UserProfile = props => {\n  const defaultAvatar =\n    'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg';\n  const { name, tag, location, avatar = defaultAvatar, stats } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={s.avatar}\n          width=\"100\"\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers </span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views </span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes </span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nUserProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default UserProfile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction randomColor() {\n  return Math.floor(Math.random() * 255);\n}\n\nfunction Statistics({ statTitle, items }) {\n  return (\n    <section className={s.statistics}>\n      {statTitle && <h3 className={s.title}>{statTitle}</h3>}\n\n      <ul className={s.list}>\n        {items.map(item => (\n          <li\n            key={item.id}\n            className={s.item}\n            style={{\n              backgroundColor: `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`,\n            }}\n          >\n            <span className={s.label}>{item.label}</span>\n            <span className={s.percentage}>{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  statTitle: PropTypes.string,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={s.item}>\n      <span className={s.status}>{isOnline ? 'ON' : 'OFF'}</span>\n      <img\n        className={s.avatar}\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        width=\"48\"\n      />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import Friends from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ userFriends }) {\n  return (\n    <ul className={s.list}>\n      {userFriends.map(userFriend => (\n        <Friends\n          key={userFriend.id}\n          avatar={userFriend.avatar}\n          name={userFriend.name}\n          isOnline={userFriend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  userFriends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nconst Transactions = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactions.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default Transactions;\n","import Transactions from './TransactionData';\nimport PropTypes from 'prop-types';\n\nfunction TransactionHistory({ userTransactions }) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {userTransactions.map(userTransaction => (\n          <Transactions\n            key={userTransaction.id}\n            type={userTransaction.type}\n            amount={userTransaction.amount}\n            currency={userTransaction.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  userTransactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './components/UserProfile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <Container>\n      <Section title=\"Задание 1 - Профиль социальной сети\">\n        <UserProfile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n      <Section title=\"Задание 2 - Секция статистики\">\n        <Statistics statTitle=\"Upload stats\" items={statisticalData} />\n      </Section>\n      <Section title=\"Задание 3 - Список друзей\">\n        <FriendList userFriends={friends} />\n      </Section>\n      <Section title=\"Задание 4 - История транзакций\">\n        <TransactionHistory userTransactions={transactions} />\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}