{"version":3,"sources":["components/UserProfile/UserProfile.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Container/Container.js","components/Section/Section.js","components/UserProfile/UserProfile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionData.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","task","UserProfile","props","name","tag","location","avatar","stats","profile","description","src","alt","width","item","label","quantity","followers","views","likes","randomColor","Math","floor","random","Statistics","statTitle","items","map","style","backgroundColor","percentage","id","FriendListItem","isOnline","FriendList","userFriends","userFriend","Transactions","type","amount","currency","TransactionHistory","userTransactions","userTransaction","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff208bab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__qZQME\",\"description\":\"UserProfile_description__tJx27\",\"avatar\":\"UserProfile_avatar__LO_Gz\",\"name\":\"UserProfile_name__3RgpT\",\"tag\":\"UserProfile_tag__ZxGkk\",\"location\":\"UserProfile_location__UWsEI\",\"stats\":\"UserProfile_stats__2h9OY\",\"item\":\"UserProfile_item__3SLW8\",\"label\":\"UserProfile_label__2fc85\",\"quantity\":\"UserProfile_quantity__19vKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1-ftx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Section_task__yaqGS\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.task}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './UserProfile.module.css';\r\n\r\nconst UserProfile = (props) => {\r\n  const defaultAvatar = 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg';\r\n  const { name, tag, location, avatar = defaultAvatar, stats, } = props;\r\n  return (<div className={s.profile}>\r\n    <div className={s.description}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={s.avatar}\r\n        width=\"100\"\r\n      />\r\n      <p className={s.name}>{name}</p>\r\n      <p className={s.tag}>@{tag}</p>\r\n      <p className={s.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={s.stats}>\r\n      <li className={s.item}>\r\n        <span className={s.label}>Followers </span>\r\n        <span className={s.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <span className={s.label}>Views </span>\r\n        <span className={s.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <span className={s.label}>Likes </span>\r\n        <span className={s.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>);\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  })\r\n};\r\n\r\nexport default UserProfile;","import PropTypes from 'prop-types';\r\n\r\nfunction randomColor() {\r\n  return Math.floor(Math.random() * 255);\r\n};\r\n\r\nfunction Statistics({ statTitle, items }) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      {statTitle && <h3 className=\"statistics-title\">{statTitle}</h3>}\r\n\r\n      <ul className=\"stat-list\">\r\n        {items.map(item => (\r\n          <li key={item.id} className=\"item\" style={{ backgroundColor: `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})` }}>\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  statTitle: PropTypes.string,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({\r\n  avatar,\r\n  name,\r\n  isOnline,\r\n}) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <span className=\"status\">{isOnline ? 'Online' : 'Offline'}</span>\r\n      <img className=\"avatar\" src={avatar} alt=\"Аватар пользователя\" width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import Friends from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FriendList({ userFriends }) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {userFriends.map(userFriend => (\r\n          <Friends\r\n            key={userFriend.id}\r\n            avatar={userFriend.avatar}\r\n            name={userFriend.name}\r\n            isOnline={userFriend.isOnline}\r\n          />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  userFriends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\n\r\nconst Transactions = ({\r\n  type,\r\n  amount,\r\n  currency,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactions.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transactions;","import Transactions from './TransactionData';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({ userTransactions }) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {userTransactions.map(userTransaction => (\r\n          <Transactions\r\n            key={userTransaction.id}\r\n            type={userTransaction.type}\r\n            amount={userTransaction.amount}\r\n            currency={userTransaction.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  userTransactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;","import Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport UserProfile from './components/UserProfile/UserProfile';\nimport Statistics from './components/Statistics/Statistics'\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './components/UserProfile/user.json';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nexport default function App() {\n  return (\n    <Container>\n      <Section title=\"Задание 1 - Профиль социальной сети\">\n        <UserProfile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n      <Section title=\"Задание 2 - Секция статистики\">\n        <Statistics\n          statTitle=\"Upload stats\"\n          items={statisticalData}\n        />\n      </Section>\n      <Section title=\"Задание 3 - Список друзей\">\n        <FriendList\n          userFriends={friends}\n        />\n      </Section>\n      <Section title=\"Задание 4 - История транзакций\">\n        <TransactionHistory\n          userTransactions={transactions}\n        />\n      </Section>\n    </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}